FUNCTION_BLOCK FuzzyInky

VAR_INPUT
	pacmanPosConfidence : REAL;
	distanceToPacman : REAL;
	pacmanDistanceToPPill : REAL;
	distanceToPacmanWithSpeed : REAL;
	pacmanInCorner : REAL;

	distanceToLair : REAL;
	remainingTime : REAL;
	edible : REAL;
	arrivesFirstToPP : REAL;
	anotherGhostNotEdible : REAL;
	anotherGhostInLair : REAL;
	anotherGhostEdible : REAL;
	intercept : REAL;
END_VAR

VAR_OUTPUT
    INKYRunaway : REAL;
    INKYChase : REAL;
    INKYSearchPacman : REAL;
    INKYProtectsEdible : REAL;
    INKYRunsToLair : REAL;
    INKYGoesToPP : REAL;
    INKYTrapsInCorner : REAL;
    INKYRunsAwayToGhost : REAL;
END_VAR

FUZZIFY distanceToPacman
	TERM near:=(0,1)(50,0);
	TERM medium := (40,0)(100,1)(150,0);
	TERM far := (120,0)(160,1)(2000,1);
END_FUZZIFY

FUZZIFY pacmanDistanceToPPill
	TERM near:=(0,1)(40,1)(60,0);
	TERM medium := (50,0)(80,1)(100,0);
	TERM far := (90,0)(120,1)(2000,1);
END_FUZZIFY

FUZZIFY distanceToPacmanWithSpeed
	TERM near:=(0,1)(20,1)(40,0);
	TERM medium := (30,0)(50,1)(70,0);
	TERM far := (60,0)(80,1)(2000,1);
END_FUZZIFY

FUZZIFY remainingTime
	TERM low := (0,1)(10,0);
	TERM medium := (5,0)(10,1)(30,1)(35,0);
	TERM high := (30,0)(50,1);
END_FUZZIFY

FUZZIFY edible
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY distanceToLair
	TERM near:=(0,1)(20,1)(40,0);
	TERM medium := (30,0)(50,1)(70,0);
	TERM far := (60,0)(80,1)(2000,1);
END_FUZZIFY

FUZZIFY arrivesFirstToPP
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY anotherGhostNotEdible
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY anotherGhostEdible
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY anotherGhostInLair
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY intercept
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY pacmanInCorner
	TERM no := (-1,1)(0.5,1)(0.5,0);
	TERM yes:= (0.5,0)(0.5,1)(2,1);
END_FUZZIFY

FUZZIFY pacmanPosConfidence
	TERM zero := (0,1)(1,1)(1,0);
	TERM low := (1,0)(1,1)(15,1)(30,0) ; 
	TERM medium := (20,0)(30,1)(60,1)(70,0);
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

DEFUZZIFY INKYRunaway
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY
DEFUZZIFY INKYChase
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY
DEFUZZIFY INKYSearchPacman
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY
DEFUZZIFY INKYProtectsEdible
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;
END_DEFUZZIFY
DEFUZZIFY INKYRunsAwayToGhost
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;
END_DEFUZZIFY
DEFUZZIFY INKYRunsToLair
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;
END_DEFUZZIFY
DEFUZZIFY INKYGoesToPP
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;
END_DEFUZZIFY
DEFUZZIFY INKYTrapsInCorner
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := (5, 0) (15, 1) (25, 0);
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;
END_DEFUZZIFY


RULEBLOCK INKYRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF edible IS no AND distanceToPacman IS near AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 2 : IF edible IS no AND distanceToPacman IS medium AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 3 : IF edible IS no AND distanceToPacman IS far AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	
	RULE 4 : IF edible IS no AND distanceToPacman IS near AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 5 : IF edible IS no AND distanceToPacman IS medium AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 6 : IF edible IS no AND distanceToPacman IS far AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	
	RULE 7 : IF edible IS no AND distanceToPacman IS near AND pacmanPosConfidence IS low THEN INKYChase IS calm;
	RULE 8 : IF edible IS no AND distanceToPacman IS medium AND pacmanPosConfidence IS low THEN INKYChase IS calm;
	RULE 9 : IF edible IS no AND distanceToPacman IS far AND pacmanPosConfidence IS low THEN INKYChase IS calm;

	//near PP runAway (ghost far from pacman)
	RULE 10 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS high THEN INKYRunaway IS emergency;
	RULE 11 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS medium THEN INKYRunaway IS calm;
	RULE 12 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS low THEN INKYRunaway IS calm;

	RULE 13 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS high THEN INKYRunaway IS emergency;
	RULE 14 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS medium THEN INKYRunaway IS nervious;
	RULE 15 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS low THEN INKYRunaway IS calm;

	RULE 16 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS far AND pacmanPosConfidence IS high THEN INKYRunaway IS calm;
	RULE 17 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS far AND pacmanPosConfidence IS medium THEN INKYRunaway IS calm;
	RULE 18 : IF distanceToPacman IS far AND pacmanDistanceToPPill IS far AND pacmanPosConfidence IS low THEN INKYRunaway IS calm;
    
	//search for mspacman when confidence is 0
	RULE 19 : IF edible IS no AND pacmanPosConfidence IS zero THEN INKYSearchPacman IS emergency;
	RULE 20 : IF edible IS no AND pacmanPosConfidence IS low THEN INKYSearchPacman IS nervious;
	RULE 21 : IF edible IS no AND pacmanPosConfidence IS medium THEN INKYSearchPacman IS calm;
	RULE 22 : IF edible IS no AND pacmanPosConfidence IS high THEN INKYSearchPacman IS calm;
	
	//protect another edible ghost
	RULE 23 : IF edible IS no AND anotherGhostEdible IS yes THEN INKYProtectsEdible IS emergency;

	//run away to ghost or run away to lair
	RULE 24 : IF edible IS yes AND anotherGhostNotEdible IS yes AND anotherGhostInLair IS no THEN INKYRunsAwayToGhost IS emergency;
	RULE 25 : IF edible IS yes AND anotherGhostNotEdible IS yes AND anotherGhostInLair IS yes AND distanceToLair IS far THEN INKYRunsAwayToGhost IS emergency;
	RULE 26 : IF edible IS yes AND anotherGhostNotEdible IS yes AND anotherGhostInLair IS yes AND distanceToLair IS medium THEN INKYRunsAwayToGhost IS nervious;
	RULE 27 : IF edible IS yes AND anotherGhostNotEdible IS yes AND anotherGhostInLair IS yes AND distanceToLair IS near THEN INKYRunsAwayToGhost IS calm;

	RULE 28 : IF edible IS yes AND anotherGhostInLair IS yes AND anotherGhostNotEdible IS no THEN INKYRunsToLair IS emergency;
	RULE 29 : IF edible IS yes AND anotherGhostInLair IS yes AND anotherGhostNotEdible IS yes AND distanceToLair IS near THEN INKYRunsToLair IS emergency;
	RULE 30 : IF edible IS yes AND anotherGhostInLair IS yes AND anotherGhostNotEdible IS yes AND distanceToLair IS medium THEN INKYRunsToLair IS nervious;
	RULE 31 : IF edible IS yes AND anotherGhostInLair IS yes AND anotherGhostNotEdible IS yes AND distanceToLair IS far THEN INKYRunsToLair IS calm;

	//goes to corner to die
	RULE 32 : IF edible IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS high THEN INKYGoesToPP IS emergency;
	RULE 33 : IF edible IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS high THEN INKYGoesToPP IS nervious;
	RULE 34 : IF edible IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS high THEN INKYGoesToPP IS calm;

	RULE 35 : IF edible IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS medium THEN INKYGoesToPP IS nervious;
	RULE 36 : IF edible IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS medium THEN INKYGoesToPP IS nervious;
	RULE 37 : IF edible IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS medium THEN INKYGoesToPP IS calm;

	RULE 38 : IF edible IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS low THEN INKYGoesToPP IS nervious;
	RULE 39 : IF edible IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS low THEN INKYGoesToPP IS calm;
	RULE 40 : IF edible IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS low THEN INKYGoesToPP IS calm;

	//turns non edible before pacman reaches
	RULE 41 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS far AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 42 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS medium AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 43 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS near AND pacmanPosConfidence IS high THEN INKYChase IS calm;

	RULE 44 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS far AND pacmanPosConfidence IS medium THEN INKYChase IS emergency;
	RULE 45 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS medium AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 46 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS near AND pacmanPosConfidence IS medium THEN INKYChase IS calm;

	RULE 47 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS far AND pacmanPosConfidence IS low THEN INKYChase IS nervious;
	RULE 48 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS medium AND pacmanPosConfidence IS low THEN INKYChase IS calm;
	RULE 49 : IF edible IS yes AND remainingTime IS low AND distanceToPacmanWithSpeed IS near AND pacmanPosConfidence IS low THEN INKYChase IS calm;

	//trap in the corner
	RULE 50 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS high THEN INKYTrapsInCorner IS emergency;
	RULE 51 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS high THEN INKYTrapsInCorner IS emergency;
	RULE 52 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS high THEN INKYTrapsInCorner IS emergency;

	RULE 53 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS medium THEN INKYTrapsInCorner IS nervious;
	RULE 54 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS medium THEN INKYTrapsInCorner IS emergency;
	RULE 55 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS medium THEN INKYTrapsInCorner IS emergency;

	RULE 56 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS low THEN INKYTrapsInCorner IS calm;
	RULE 57 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS low THEN INKYTrapsInCorner IS calm;
	RULE 58 : IF edible IS no AND pacmanInCorner IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS low THEN INKYTrapsInCorner IS nervious;

	//intercept junction before pp
	RULE 59 : IF edible IS no AND intercept IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 60 : IF edible IS no AND intercept IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 61 : IF edible IS no AND intercept IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS high THEN INKYChase IS emergency;

	RULE 62 : IF edible IS no AND intercept IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 63 : IF edible IS no AND intercept IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS medium THEN INKYChase IS emergency;
	RULE 64 : IF edible IS no AND intercept IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS medium THEN INKYChase IS emergency;

	RULE 65 : IF edible IS no AND intercept IS yes AND distanceToPacman IS far AND pacmanPosConfidence IS low THEN INKYChase IS calm;
	RULE 66 : IF edible IS no AND intercept IS yes AND distanceToPacman IS medium AND pacmanPosConfidence IS low THEN INKYChase IS calm;
	RULE 67 : IF edible IS no AND intercept IS yes AND distanceToPacman IS near AND pacmanPosConfidence IS low THEN INKYChase IS nervious;
	
	//near PP chase (ghost near pacman)
	RULE 68 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 69 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 70 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS low THEN INKYChase IS calm;

	RULE 71 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS high THEN INKYChase IS emergency;
	RULE 72 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS medium THEN INKYChase IS nervious;
	RULE 73 : IF distanceToPacman IS near AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS low THEN INKYChase IS calm;

	//near PP runAway (ghost medium distance to pacman)
	RULE 74 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS high THEN INKYRunaway IS emergency;
	RULE 75 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS medium THEN INKYRunaway IS calm;
	RULE 76 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS near AND pacmanPosConfidence IS low THEN INKYRunaway IS calm;
	
	RULE 77 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS high THEN INKYRunaway IS emergency;
	RULE 78 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS medium THEN INKYRunaway IS nervious;
	RULE 79 : IF distanceToPacman IS medium AND pacmanDistanceToPPill IS medium AND pacmanPosConfidence IS low THEN INKYRunaway IS calm;

END_RULEBLOCK

END_FUNCTION_BLOCK
