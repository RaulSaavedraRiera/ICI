FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables

	BLINKYconfidence : REAL;
	PINKYconfidence : REAL;
	INKYconfidence : REAL;
	SUEconfidence : REAL;

	BLINKYdistance : REAL;
	PINKYdistance : REAL;
	INKYdistance : REAL;
	SUEdistance : REAL;

	BLINKYdirection : REAL;
	PINKYdirection : REAL;
	INKYdirection : REAL;
	SUEdirection : REAL;

	BLINKYedibleTime : REAL;
	PINKYedibleTime : REAL;
	INKYedibleTime : REAL;
	SUEedibleTime : REAL;

	BLINKYlairTime : REAL;
	PINKYlairTime : REAL;
	INKYlairTime : REAL;
	SUElairTime : REAL;

	PILLSnear : REAL;
	LAIRdistance : REAL;
	NEARESTCORNERDistance : REAL;

	PP0distance : REAL;
	PP1distance : REAL;
	PP2distance : REAL;
	PP3distance : REAL;
	
	G4CONFIDENCE_high : REAL;
	G3CONFIDENCE_high : REAL;
	G2CONFIDENCE_high : REAL;
	G1CONFIDENCE_high : REAL;
	
	G4CONFIDENCE_medium : REAL;
	G3CONFIDENCE_medium : REAL;
	G2CONFIDENCE_medium : REAL;
	G1CONFIDENCE_medium : REAL;
	
	G4CONFIDENCE_low : REAL;
	G3CONFIDENCE_low : REAL;
	G2CONFIDENCE_low : REAL;
	G1CONFIDENCE_low : REAL;
	
	G4DISTANCE_far : REAL;
	G3DISTANCE_far : REAL;
	G2DISTANCE_far : REAL;
	G1DISTANCE_far : REAL;
	
	G4DISTANCE_medium : REAL;
	G3DISTANCE_medium : REAL;
	G2DISTANCE_medium : REAL;
	G1DISTANCE_medium : REAL;
	
	G4DISTANCE_near : REAL;
	G3DISTANCE_near : REAL;
	G2DISTANCE_near : REAL;
	G1DISTANCE_near : REAL;
	
	
	NOGHOSTSfar : REAL;
	NOGHOSTSmedium : REAL;
	NOGHOSTSnear : REAL;
	
END_VAR

VAR_OUTPUT				// Define output variable
	Runaway : REAL;
	GoToPPill: REAL;
	DefaultAction: REAL;
END_VAR


FUZZIFY BLINKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY INKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY PINKYconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY
FUZZIFY SUEconfidence			
	TERM low := (0,1)(25,1)(50,0) ; 
	TERM medium := gauss 50 25;
	TERM high := (50,0)(75,1)(100,1);
END_FUZZIFY

FUZZIFY BLINKYdistance		
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY PINKYdistance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY INKYdistance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY
FUZZIFY SUEdistance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY BLINKYdirection			
	TERM up := (0, 1); 
	TERM right := (1, 1);
	TERM down := (2, 1);
	TERM left := (3, 1);
END_FUZZIFY
FUZZIFY PINKYdirection			
	TERM up := (0, 1); 
	TERM right := (1, 1);
	TERM down := (2, 1);
	TERM left := (3, 1);
END_FUZZIFY
FUZZIFY INKYdirection			
	TERM up := (0, 1); 
	TERM right := (1, 1);
	TERM down := (2, 1);
	TERM left := (3, 1);
END_FUZZIFY
FUZZIFY SUEdirection			
	TERM up := (0, 1); 
	TERM right := (1, 1);
	TERM down := (2, 1);
	TERM left := (3, 1);
END_FUZZIFY

FUZZIFY BLINKYedibleTime		
	TERM chasing := (0, 1); 
	TERM closeChasing := (0, 0)(1, 1)(7, 0);
	TERM edible := (7, 0)(8, 1)(15, 0);
	TERM edibleSecure := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY PINKYedibleTime			
	TERM chasing := (0, 1); 
	TERM closeChasing := (0, 0)(1, 1)(7, 0);
	TERM edible := (7, 0)(8, 1)(15, 0);
	TERM edibleSecure := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY INKYedibleTime			
	TERM chasing := (0, 1); 
	TERM closeChasing := (0, 0)(1, 1)(7, 0);
	TERM edible := (7, 0)(8, 1)(15, 0);
	TERM edibleSecure := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY SUEedibleTime			
	TERM chasing := (0, 1); 
	TERM closeChasing := (0, 0)(1, 1)(7, 0);
	TERM edible := (7, 0)(8, 1)(15, 0);
	TERM edibleSecure := (15, 0)(16, 1)(50, 1);
END_FUZZIFY


FUZZIFY BLINKYlairTime		
	TERM out := (0, 1); 
	TERM closeOut := (0, 0)(1, 1)(7, 0);
	TERM locked := (7, 0)(8, 1)(15, 0);
	TERM lockedLong := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY PINKYlairTime			
	TERM out := (0, 1); 
	TERM closeOut := (0, 0)(1, 1)(7, 0);
	TERM locked := (7, 0)(8, 1)(15, 0);
	TERM lockedLong := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY INKYlairTime			
	TERM out := (0, 1); 
	TERM closeOut := (0, 0)(1, 1)(7, 0);
	TERM locked := (7, 0)(8, 1)(15, 0);
	TERM lockedLong := (15, 0)(16, 1)(50, 1);
END_FUZZIFY
FUZZIFY SUElairTime			
	TERM out := (0, 1); 
	TERM closeOut := (0, 0)(1, 1)(7, 0);
	TERM locked := (7, 0)(8, 1)(15, 0);
	TERM lockedLong := (15, 0)(16, 1)(50, 1);
END_FUZZIFY

FUZZIFY PILLSnear			
	TERM few := (1, 1)(20, 0); 
	TERM medium :=  gauss 30 11;
	TERM high := (20, 0)(30, 1)(200, 1);
END_FUZZIFY

FUZZIFY LAIRdistance			
	TERM near := (0, 1) (20, 0) ; 
	TERM medium := gauss 40 20;
	TERM far := (40, 0) (60, 1) (200, 1);
END_FUZZIFY

FUZZIFY NEARESTCORNERDistance			
	TERM near := (0, 1) (10, 0) ; 
	TERM medium := gauss 10 40;
	TERM far := (30, 0) (50, 1) (200, 1);
END_FUZZIFY

FUZZIFY PP0distance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PP1distance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PP2distance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

FUZZIFY PP3distance			
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY

//FACTORES PARA TENER UNA MAYOR FACILIDAD A LA HORA DE CREAR REGLAS
//conocer la confianza respectoa la posicion de los fantasmas
FUZZIFY G4CONFIDENCE_high			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3CONFIDENCE_high			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2CONFIDENCE_high			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1CONFIDENCE_high			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G4CONFIDENCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3CONFIDENCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2CONFIDENCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1CONFIDENCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G4CONFIDENCE_low			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3CONFIDENCE_low			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2CONFIDENCE_low			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1CONFIDENCE_low			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
//conocer la distancia respecto a los fantasmas
FUZZIFY G4DISTANCE_far		
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3DISTANCE_far			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2DISTANCE_far			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1DISTANCE_far			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G4DISTANCE_medium		
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3DISTANCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2DISTANCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1DISTANCE_medium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G4DISTANCE_near		
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G3DISTANCE_near			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G2DISTANCE_near			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY G1DISTANCE_near			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY NOGHOSTSfar			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY NOGHOSTSmedium			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY
FUZZIFY NOGHOSTSnear			
	TERM true := (0, 0) (1,1) ; 
	TERM false := (0, 1) (1, 0);
END_FUZZIFY


DEFUZZIFY Runaway			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY GoToPPill			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY DefaultAction		
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


//se podria guardar cuantos fantasmas cumplen x condicion
RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1: IF PILLSnear IS few OR PILLSnear IS medium OR PILLSnear IS high THEN DefaultAction IS emergency;

	//if powerpill cerca && todos los fantasmas a media distancia && confianza alta o media ir a pp
	
	//
	
	
	
	//plantilla todos fantasmas
	//RULE 1 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND PINKYdistance IS medium AND PINKYconfidence IS high AND
	//INKYdistance IS medium AND INKYconfidence IS high AND SUEdistance IS medium AND SUEconfidence IS high AND 
	//THEN PacmanChasePowerPill IS emergency;
	//(x OR x) AND y == (x ||x) && y 

	// Hace falta PACMANdirection, GXedible (true/false), GoToEdibleGroup (Va a grupo Comestible)

	 RULE 1 : IF BLINKYdistance IS near AND BLINKYconfidence IS high THEN Runaway IS emergency;
	 RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS high THEN Runaway IS emergency;
	 RULE 3 : IF INKYdistance IS near AND INKYconfidence IS high THEN Runaway IS emergency;
	 RULE 4 : IF SUEdistance IS near AND SUEconfidence IS high THEN Runaway IS emergency;

	 RULE 5 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 6 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 7 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 8 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS up THEN Runaway IS nervious;
	 RULE 9 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 10 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 11 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 12 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS left THEN Runaway IS nervious;
	 RULE 13 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 14 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 15 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 16 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS right THEN Runaway IS nervious;
	 RULE 17 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 18 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 19 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 20 : IF BLINKYdistance IS near AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS down THEN Runaway IS nervious;
//
	 RULE 21 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS up AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 22 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS up AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 23 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS up AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 24 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS up AND PACMANdirection IS up THEN Runaway IS nervious;
	 RULE 25 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS left AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 26 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS left AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 27 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS left AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 28 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS left AND PACMANdirection IS left THEN Runaway IS nervious;
	 RULE 29 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS right AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 30 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS right AND PACMANdirection IS down THEN Runaway IS emergency;
	 RULE 31 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS right AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 32 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS right AND PACMANdirection IS right THEN Runaway IS nervious;
	 RULE 33 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS down AND PACMANdirection IS left THEN Runaway IS emergency;
	 RULE 34 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS down AND PACMANdirection IS right THEN Runaway IS emergency;
	 RULE 35 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS down AND PACMANdirection IS up THEN Runaway IS emergency;
	 RULE 36 : IF BLINKYdistance IS medium AND BLINKYconfidence IS high AND BLINKYdirection IS down AND PACMANdirection IS down THEN Runaway IS nervious;
//
	 RULE 37 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS left THEN Runaway IS nervious;
	 RULE 38 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS down THEN Runaway IS nervious;
	 RULE 39 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS right THEN Runaway IS nervious;
	 RULE 40 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS up AND PACMANdirection IS up THEN Runaway IS calm;
	 RULE 41 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS down THEN Runaway IS nervious;
	 RULE 42 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS right THEN Runaway IS nervious;
	 RULE 43 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS up THEN Runaway IS nervious;
	 RULE 44 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS left AND PACMANdirection IS left THEN Runaway IS calm;
	 RULE 45 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS left THEN Runaway IS nervious;
	 RULE 46 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS down THEN Runaway IS nervious;
	 RULE 47 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS up THEN Runaway IS nervious;
	 RULE 48 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS right AND PACMANdirection IS right THEN Runaway IS calm;
	 RULE 49 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS left THEN Runaway IS nervious;
	 RULE 50 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS right THEN Runaway IS nervious;
	 RULE 51 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS up THEN Runaway IS nervious;
	 RULE 52 : IF BLINKYdistance IS medium AND BLINKYconfidence IS medium AND BLINKYdirection IS down AND PACMANdirection IS down THEN Runaway IS calm;
	 RULE 53 : IF BLINKYdistance IS far AND BLINKYconfidence IS high THEN Runaway IS calm;
	 RULE 54 : IF BLINKYconfidence IS low THEN Runaway IS nervious;
//
//
	 RULE 55: IF G4DISTANCE_near IS true AND G4CONFIDENCE_high IS true THEN Runaway IS emergency;
	 RULE 56: IF G3DISTANCE_near IS true AND G3CONFIDENCE_high IS true THEN GoToPPill IS emergency;
	 RULE 57: IF G2DISTANCE_near IS true AND G2CONFIDENCE_high IS true THEN GoToPPill IS emergency;
	 RULE 58: IF G1DISTANCE_near IS true AND G1CONFIDENCE_high IS true THEN GoToPPill IS nervious;
//	
	 RULE 59: IF G4DISTANCE_medium IS true AND G4CONFIDENCE_high IS true THEN GoToPPill IS emergency;
	 RULE 60: IF G3DISTANCE_medium IS true AND G3CONFIDENCE_high IS true THEN GoToPPill IS emergency;
	 RULE 61: IF G2DISTANCE_medium IS true AND G2CONFIDENCE_high IS true THEN GoToPPill IS emergency;
	 RULE 62: IF G1DISTANCE_medium IS true AND G1CONFIDENCE_high IS true THEN GoToPPill IS nervious;
//	
	 RULE 63: IF G4DISTANCE_far IS true AND G4CONFIDENCE_high IS true THEN GoToPPill IS calm;
	 RULE 64: IF G3DISTANCE_far IS true AND G3CONFIDENCE_high IS true THEN GoToPPill IS calm;
//
	 RULE 65: IF G4DISTANCE_near IS true AND G4CONFIDENCE_medium IS true THEN Runaway IS emergency;
	 RULE 66: IF G3DISTANCE_near IS true AND G3CONFIDENCE_medium IS true THEN Runaway IS emergency;
	 RULE 67: IF G2DISTANCE_near IS true AND G2CONFIDENCE_medium IS true THEN Runaway IS nervious;
	 RULE 68: IF G1DISTANCE_near IS true AND G1CONFIDENCE_medium IS true THEN Runaway IS nervious;
//
	 RULE 69: IF G4DISTANCE_medium IS true AND G4CONFIDENCE_medium IS true THEN GoToPPill IS emergency;
	 RULE 70: IF G3DISTANCE_medium IS true AND G3CONFIDENCE_medium IS true THEN GoToPPill IS nervious;
	 RULE 71: IF G2DISTANCE_medium IS true AND G2CONFIDENCE_medium IS true THEN GoToPPill IS nervious;
	 RULE 72: IF G1DISTANCE_medium IS true AND G1CONFIDENCE_medium IS true THEN GoToPPill IS calm;
//	
	 RULE 73: IF G4DISTANCE_far IS true AND G4CONFIDENCE_medium IS true THEN GoToPPill IS calm;
	 RULE 74: IF G3DISTANCE_far IS true AND G3CONFIDENCE_medium IS true THEN GoToPPill IS nervious;
//
	 RULE 75: IF G4CONFIDENCE_low IS true THEN Runaway IS nervious;
	 RULE 76: IF G3CONFIDENCE_low IS true THEN Runaway IS nervious;
	 RULE 77: IF G2CONFIDENCE_low IS true THEN Runaway IS nervious;
	 RULE 78: IF G1CONFIDENCE_low IS true THEN Runaway IS nervious;
//
//
	 RULE 79: IF G4DISTANCE_near IS true AND G4EDIBLE IS true AND G4CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 80: IF G3DISTANCE_near IS true AND G3EDIBLE IS true AND G3CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 81: IF G2DISTANCE_near IS true AND G2EDIBLE IS true AND G2CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 82: IF G1DISTANCE_near IS true AND G1EDIBLE IS true AND G1CONFIDENCE_high IS true THEN GoToEdibleGroup IS nervious;
//
	 RULE 83: IF G4DISTANCE_medium IS true AND G4EDIBLE IS true AND G4CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 84: IF G3DISTANCE_medium IS true AND G3EDIBLE IS true AND G3CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 85: IF G2DISTANCE_medium IS true AND G2EDIBLE IS true AND G2CONFIDENCE_high IS true THEN GoToEdibleGroup IS emergency;
	 RULE 86: IF G1DISTANCE_medium IS true AND G1EDIBLE IS true AND G1CONFIDENCE_high IS true THEN GoToEdibleGroup IS nervious;
//	
	 RULE 87: IF G4DISTANCE_far IS true AND G4EDIBLE IS true AND G4CONFIDENCE_high IS true THEN GoToEdibleGroup IS calm;
	 RULE 88: IF G3DISTANCE_far IS true AND G4EDIBLE IS true AND G4CONFIDENCE_high IS true THEN GoToEdibleGroup IS calm;
//
	 RULE 89: IF G4DISTANCE_near IS true AND G4EDIBLE IS true AND G4CONFIDENCE_medium IS true THEN GoToEdibleGroup IS emergency;
	 RULE 90: IF G3DISTANCE_near IS true AND G3EDIBLE IS true AND G3CONFIDENCE_medium IS true THEN GoToEdibleGroup IS emergency;
	 RULE 91: IF G2DISTANCE_near IS true AND G2EDIBLE IS true AND G2CONFIDENCE_medium IS true THEN GoToEdibleGroup IS nervious;
	 RULE 92: IF G1DISTANCE_near IS true AND G1EDIBLE IS true AND G1CONFIDENCE_medium IS true THEN GoToEdibleGroup IS nervious;
//
	 RULE 93: IF G4DISTANCE_near IS true AND G4EDIBLE IS true AND G4CONFIDENCE_medium IS true THEN GoToEdibleGroup IS emergency;
	 RULE 94: IF G3DISTANCE_medium IS true AND G3EDIBLE IS true AND G3CONFIDENCE_medium IS true THEN GoToEdibleGroup IS nervious;
	 RULE 95: IF G2DISTANCE_medium IS true AND G2EDIBLE IS true AND G2CONFIDENCE_medium IS true THEN GoToEdibleGroup IS nervious;
	 RULE 96: IF G1DISTANCE_medium IS true AND G1EDIBLE IS true AND G1CONFIDENCE_medium IS true THEN GoToEdibleGroup IS calm;
//	
	 RULE 97: IF G4DISTANCE_near IS true AND G4EDIBLE IS true AND G4CONFIDENCE_medium IS true THEN GoToEdibleGroup IS calm;
	 RULE 98: IF G3DISTANCE_far IS true AND G3EDIBLE IS true AND G3CONFIDENCE_medium IS true THEN GoToEdibleGroup IS nervious;
//
	 RULE 99: IF G4CONFIDENCE_low IS true AND G4EDIBLE IS true THEN GoToEdibleGroup IS nervious;
	 RULE 100: IF G3CONFIDENCE_low IS true AND G3EDIBLE IS true THEN GoToEdibleGroup IS nervious;
	 RULE 101: IF G2CONFIDENCE_low IS true AND G2EDIBLE IS true THEN GoToEdibleGroup IS nervious;
	 RULE 102: IF G1CONFIDENCE_low IS true AND G1EDIBLE IS true THEN GoToEdibleGroup IS nervious;
//
//
	 RULE 103: IF BLINKYlairTime IS closeOut AND LAIRdistance IS near THEN RunawayLAIR IS emergency;
	 RULE 104: IF INKYlairTime IS closeOut AND LAIRdistance IS near THEN RunawayLAIR IS emergency;
	 RULE 105: IF PINKYlairTime IS closeOut AND LAIRdistance IS near THEN RunawayLAIR IS emergency;
	 RULE 106: IF SUElairTime IS closeOut AND LAIRdistance IS near THEN RunawayLAIR IS emergency;
//
	 RULE 107: IF BLINKYlairTime IS locked AND LAIRdistance IS near THEN RunawayLAIR IS nervious;
	 RULE 108: IF BLINKYlairTime IS closeOut AND LAIRdistance IS medium THEN RunawayLAIR IS nervious;
	 RULE 109: IF INKYlairTime IS locked AND LAIRdistance IS near THEN RunawayLAIR IS nervious;
	 RULE 110: IF INKYlairTime IS closeOut AND LAIRdistance IS medium THEN RunawayLAIR IS nervious;
	 RULE 111: IF PINKYlairTime IS locked AND LAIRdistance IS near THEN RunawayLAIR IS nervious;
	 RULE 112: IF PINKYlairTime IS closeOut AND LAIRdistance IS medium THEN RunawayLAIR IS nervious;
	 RULE 113: IF SUElairTime IS locked AND LAIRdistance IS near THEN RunawayLAIR IS nervious;
	 RULE 114: IF SUElairTime IS closeOut AND LAIRdistance IS medium THEN RunawayLAIR IS nervious;
//	
	 RULE 115: IF BLINKYlairTime IS lockedLong THEN RunawayLAIR IS calm;
	 RULE 116: IF INKYlairTime IS lockedLong THEN RunawayLAIR IS calm;
	 RULE 117: IF PINKYlairTime IS lockedLong THEN RunawayLAIR IS calm;
	 RULE 118: IF SUElairTime IS lockedLong THEN RunawayLAIR IS calm;
//	

//reglas entorno
 //cuando no hay ghosts cerca
	 RULE 119: IF NOGHOSTSnear IS true AND LAIRdistance IS far THEN RunAwayLAIR IS calm;
	 RULE 120: IF NOGHOSTSnear IS true AND LAIRdistance IS medium THEN RunAwayLAIR IS nervious;
	 RULE 121: IF NOGHOSTSnear IS true AND LAIRdistance IS near THEN RunAwayLAIR IS emergency;
	 
	 RULE 122: IF NOGHOSTSnear IS true AND PP0distance IS far THEN RunAwayCORNER IS calm;
	 RULE 123: IF NOGHOSTSnear IS true AND PP1distance IS far THEN RunAwayCORNER IS calm;
	 RULE 124: IF NOGHOSTSnear IS true AND PP2distance IS far THEN RunAwayCORNER IS calm;
	 RULE 125: IF NOGHOSTSnear IS true AND PP3distance IS far THEN RunAwayCORNER IS calm;
	    
	 RULE 126: IF NOGHOSTSnear IS true AND PP0distance IS medium THEN RunAwayCORNER IS nervious;
	 RULE 127: IF NOGHOSTSnear IS true AND PP1distance IS medium THEN RunAwayCORNER IS nervious;
	 RULE 128: IF NOGHOSTSnear IS true AND PP2distance IS medium THEN RunAwayCORNER IS nervious;
	 RULE 129: IF NOGHOSTSnear IS true AND PP3distance IS medium THEN RunAwayCORNER IS nervious;
	 
	 RULE 130: IF NOGHOSTSnear IS true AND PP0distance IS near THEN RunAwayCORNER IS emergency;
	 RULE 131: IF NOGHOSTSnear IS true AND PP1distance IS near THEN RunAwayCORNER IS emergency;
	 RULE 132: IF NOGHOSTSnear IS true AND PP2distance IS near THEN RunAwayCORNER IS emergency;
	 RULE 133: IF NOGHOSTSnear IS true AND PP3distance IS near THEN RunAwayCORNER IS emergency;
	 
	 RULE 134: IF NOGHOSTSnear IS true AND PILLSnear IS high THEN ChasePILL IS emergency;
	 RULE 135: IF NOGHOSTSnear IS true AND PILLSnear IS medium THEN ChasePILL IS nervious;
	 RULE 136: IF NOGHOSTSnear IS true AND PILLSnear IS few THEN ChasePILL IS calm;
	 RULE 137: IF NOGHOSTSnear IS true AND (PILLSnear IS high OR PILLSnear IS medium) THEN ChaseGHOST IS calm;
	 RULE 138: IF NOGHOSTSnear IS true AND PILLSnear IS few THEN ChaseGHOST IS nervious;
	 
	


	//IF 4fantasmasCerca && buenas tardes THEN hola
END_RULEBLOCK

END_FUNCTION_BLOCK

